{"version":3,"sources":["view/Login.js","view/Test.js","router/AppRoute.js","App.js","reportWebVitals.js","index.js"],"names":["LineLogin","useState","lineId","setLineId","state","randomBytes","toString","nonce","LINE_CHANNEL_SECRET","LINE_CHANNEL_ID","CALLBACK_URL","lineLogin","link","window","location","href","useEffect","query","url","parse","Object","keys","length","callbackURL","console","log","prototype","hasOwnProperty","call","reqBody","grant_type","code","redirect_uri","client_id","client_secret","axios","post","qs","stringify","headers","then","res","decodedIdToken","jwt","verify","data","id_token","algorithms","audience","issuer","sub","localStorage","setItem","encodeURI","JSON","err","catch","error","swal","fire","icon","title","text","confirmButtonText","getAccessToken","validationSchema","Yup","shape","uid","required","pwd","formOptions","resolver","yupResolver","useForm","register","handleSubmit","reset","errors","formState","showData","setShowData","loadingBtn","setLoadingBtn","eye","setEye","className","type","onClick","onSubmit","LineId","put","ResponseCode","htmlFor","id","name","message","disabled","Directory","setIsLoading","allData","setAllData","get","locAry","forEach","item","index","push","filterLocAry","filter","ary","indexOf","setLocation","dept","setDept","depAry","department","getDep","filterDepAry","value","onChange","e","target","map","extension","telephone","AppRoute","props","exact","path","Login","Test","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb17b670.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useRouteMatch, Switch, Route, useLocation, useHistory } from \"react-router-dom\";\r\n\r\n//from\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\n\r\nimport randomBytes from \"randombytes\"\r\n\r\nimport { default as swal } from 'sweetalert2'\r\n\r\n// import goldennetLogo from \"../assets/images/goldennet_logo.svg\";\r\n\r\nimport axios from 'axios';\r\nimport url from 'url';\r\nimport qs from 'qs';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nconst LineLogin = () => {\r\n    // let decode = JSON.parse(decodeURIComponent(localStorage.getItem(\"ss\"))); //解碼\r\n    let [lineId, setLineId] = useState('');\r\n    const state = randomBytes(32).toString('hex');\r\n    const nonce = randomBytes(32).toString('hex');\r\n\r\n    let LINE_CHANNEL_SECRET = \"8664461fb88612dbf7ab59d5721aea3a\"\r\n    let LINE_CHANNEL_ID = \"1656692096\"\r\n    // let CALLBACK_URL = 'http://localhost:3000/'\r\n    let CALLBACK_URL = 'https://chennalhua.github.io/lineLogin/'\r\n\r\n    const lineLogin = () => {\r\n        let link = 'https://access.line.me/oauth2/v2.1/authorize?';\r\n        link += 'response_type=code';\r\n        link += `&client_id=${LINE_CHANNEL_ID}`;\r\n        link += `&redirect_uri=${CALLBACK_URL}`;\r\n        link += `&state=${state}`;\r\n        link += `&nonce=${nonce}`;\r\n        link += '&scope=openid%20profile';\r\n        link += '&prompt=consent';\r\n        link += '&bot_prompt=normal';\r\n        // link += `&max_age=241000`; 登入後的有效時間\r\n        window.location.href = link;\r\n    };\r\n    useEffect(() => {\r\n        var urlParts = url.parse(window.location.href, true);\r\n        var query = urlParts.query;\r\n        const isLogin = () => {\r\n            if (Object.keys(query).length === 0) {\r\n                lineLogin();\r\n            } \r\n        }\r\n        isLogin()\r\n    }, []);\r\n\r\n    const getAccessToken = (callbackURL) => {\r\n        var urlParts = url.parse(callbackURL, true);\r\n        var query = urlParts.query;\r\n        console.log(query)\r\n        var hasCodeProperty = Object.prototype.hasOwnProperty.call(query, 'code');\r\n        if (hasCodeProperty) {\r\n            const reqBody = {\r\n                grant_type: 'authorization_code',\r\n                code: query.code,\r\n                redirect_uri: `${CALLBACK_URL}`,\r\n                client_id: `${LINE_CHANNEL_ID}`,\r\n                client_secret: `${LINE_CHANNEL_SECRET}`\r\n            };\r\n            const reqConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            };\r\n            axios\r\n                .post(\r\n                    'https://api.line.me/oauth2/v2.1/token',\r\n                    qs.stringify(reqBody),\r\n                    reqConfig\r\n                )\r\n                .then((res) => {\r\n                    try {\r\n                        const decodedIdToken = jwt.verify(res.data.id_token, `${LINE_CHANNEL_SECRET}`, {\r\n                            algorithms: ['HS256'],\r\n                            audience: `${LINE_CHANNEL_ID}`.toString(),\r\n                            issuer: 'https://access.line.me',\r\n                            // nonce: `${newId}`\r\n                        });\r\n                        setLineId(decodedIdToken.sub)\r\n                        localStorage.setItem(\"test\", encodeURI(JSON.stringify(decodedIdToken.sub)));\r\n                        // setLineUserID(decodedIdToken.sub)\r\n\r\n                        // if (setIdToken) setIdToken(decodedIdToken);\r\n                    } catch (err) {\r\n                        // If token is invalid.\r\n                        console.log(err);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else if (query.error) {\r\n            swal.fire({\r\n                icon: 'error',\r\n                title: '登入失敗',\r\n                text: '需登入授權，才能轉換升級 iSmart +',\r\n                confirmButtonText: '重新登入',\r\n            }).then(function () {\r\n                lineLogin()\r\n            })\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAccessToken(window.location.href)\r\n    }, []);\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        uid: Yup.string()\r\n            .required('請正確輸入帳號'),\r\n        // .email('Email is invalid'),\r\n        pwd: Yup.string()\r\n            // .min(6, 'Password must be at least 6 characters')\r\n            .required('請正確輸入密碼'),\r\n    });\r\n    const formOptions = { resolver: yupResolver(validationSchema) };\r\n\r\n    // get functions to build form with useForm() hook\r\n    const { register, handleSubmit, reset, formState } = useForm(formOptions);\r\n    const { errors } = formState;\r\n\r\n    let [showData, setShowData] = useState({})\r\n    let [loadingBtn, setLoadingBtn] = useState(false)\r\n    const onSubmit = (data) => {\r\n        setEye(true);\r\n        data = { ...data, LineId: lineId }\r\n        let API = `https://ismart2.goldennet.com.tw/LineLogin/UpdateLineId`\r\n        setShowData(data)\r\n        console.log(data)\r\n        axios.put(API, data)\r\n            .then((res) => {\r\n                setLoadingBtn(true)\r\n                if (res.data.ResponseCode === '0') {\r\n                    setLoadingBtn(false)\r\n                    swal.fire({\r\n                        icon: 'success',\r\n                        title: '!!恭喜您!!',\r\n                        text: '已經順利轉換為 iSmart + 金頭腦帳號',\r\n                        confirmButtonText: '太好了',\r\n                    })\r\n                    reset();\r\n                } else if (res.data.ResponseCode === '1') {\r\n                    setLoadingBtn(false)\r\n                    swal.fire({\r\n                        icon: 'info',\r\n                        title: '您已成功轉換過囉~',\r\n                        text: '無須再次登入轉換囉!敬請期待 iSmart + 金頭腦',\r\n                        confirmButtonText: '沒問題',\r\n                    })\r\n                    reset();\r\n                } else if (res.data.ResponseCode === '2') {\r\n                    setLoadingBtn(false)\r\n                    swal.fire({\r\n                        icon: 'error',\r\n                        title: '轉換失敗 ><',\r\n                        text: '請先確認帳號密碼是否正確。如還轉換失敗請聯繫 eGolden_support 團隊進行協助',\r\n                        confirmButtonText: '好的',\r\n                    })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                reset();\r\n            })\r\n    }\r\n\r\n    //密碼眼睛\r\n    let [eye, setEye] = useState(true);\r\n    const handleEyeClick = () => {\r\n        if (eye) {\r\n            setEye(false);\r\n        } else {\r\n            setEye(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [showData]);\r\n\r\n    return (\r\n        <div>\r\n            {/* <BackgroundWrapper> */}\r\n            <div className=\"container-fluid bg-mask vh-100\">\r\n                <div className=\"container\">\r\n                    <button type=\"button\" onClick={lineLogin}>click</button>\r\n                    {/* <div className=\"text-center py-5\"><img src={goldennetLogo} className=\"img-fluid\" alt=\"Golden-LOGO\" width=\"300px\" /></div> */}\r\n                    <h4 className=\"text-center fw-bolder text-golden-brown\">iSmart 升級金頭腦登入</h4>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <form onSubmit={handleSubmit(onSubmit)} className=\"col-12 col-md-6 col-lg-4\">\r\n                            <div className=\"form-group my-3\">\r\n                                <label htmlFor=\"uid\" className=\"fw-bolder text-golden-brown\">請輸入《業管系統》帳號</label>\r\n                                <input id=\"uid\" name=\"uid\" type=\"text\" {...register('uid')} className={`form-control ${errors.uid ? 'is-invalid' : ''}`}\r\n                                />\r\n                                <div className=\"invalid-feedback\">{errors.uid?.message}</div>\r\n                            </div>\r\n                            <div className=\"form-group my-3 position-relative\">\r\n                                <label htmlFor=\"pwd\" className=\"fw-bolder text-golden-brown\">請輸入《業管系統》密碼</label>\r\n                                <input id=\"pwd\" name=\"pwd\" type={eye ? 'password' : 'text'} className={`form-control ${errors.pwd ? 'is-invalid' : ''}`}\r\n                                    {...register('pwd')}\r\n                                />\r\n                                <div className=\"invalid-feedback\">{errors.pwd?.message}</div>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-golden-brown w-100 mt-3\" disabled={loadingBtn ? 'disabled' : ''}>\r\n                                登入\r\n                            </button>\r\n                            {/* <button type=\"button\" onClick={() => reset()} className=\"btn btn-secondary\">Reset</button> */}\r\n                        </form>\r\n                        {\r\n                            JSON.stringify(showData)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </BackgroundWrapper> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LineLogin","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Directory = () => {\r\n    //component\r\n    let [isLoading, setIsLoading] = useState(true);\r\n\r\n    //篩選地區\r\n    let [allData, setAllData] = useState([])\r\n    useEffect(() => {\r\n        let locAPI = `/api/Gcd/loc=`;\r\n        axios.get(locAPI)\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                if(res.data.ResponseCode == '-1'){\r\n                    console.log('-1')\r\n                    // window.location.href = '/'\r\n                }\r\n                setAllData(res.data)\r\n                setIsLoading(false)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n\r\n    let locAry = []; //放置所有從 API DATA 取出的 location\r\n    const getLocation = (data) => {\r\n        data.forEach((item, index) => {\r\n            locAry.push(item.location)\r\n        })\r\n    }\r\n    getLocation(allData)\r\n    let filterLocAry = locAry.filter((item, index, ary) => {\r\n        return ary.indexOf(item) === index\r\n    }) //篩選過濾出重複後的陣列\r\n    //篩選地區 end\r\n\r\n    let [location, setLocation] = useState('總公司'); //地區\r\n    let [dept, setDept] = useState('董事長室'); //部門\r\n\r\n    //篩選部門\r\n    let depAry = [];\r\n    const getDep = (data) => {\r\n        data.forEach((item, index) => {\r\n            if (location === item.location) {\r\n                depAry.push(item.department)\r\n            }\r\n        })\r\n    }\r\n    getDep(allData);\r\n\r\n    let filterDepAry = depAry.filter((item, index, ary) => {\r\n        return ary.indexOf(item) === index\r\n    }) //篩選過濾出重複後的陣列\r\n\r\n    //篩選部門 end\r\n\r\n    //change location\r\n    const handleLocChange = (e) => {\r\n        let { value } = e.target\r\n        setLocation(value);\r\n        allData.map((item) => {\r\n            if (value === item.location) {\r\n                setDept(item.department)\r\n            }\r\n            return true\r\n        })\r\n    }\r\n    //change location end\r\n\r\n    //change department\r\n    const handleDepChange = (e) => {\r\n        let { value } = e.target\r\n        setDept(value);\r\n    }\r\n    //change department end\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mt-3\">\r\n                <div className=\"d-flex pb-2\">\r\n                    <select className=\"form-select\" value={location} onChange={handleLocChange}>\r\n                        {\r\n                            filterLocAry.map((item, index) => {\r\n                                return <option key={item} value={item}>{item}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                    <select className=\"form-select ms-2\" value={dept} onChange={handleDepChange}>\r\n                        {\r\n                            filterDepAry.map((item, index) => {\r\n                                return <option key={item} value={item}>{item}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <ul className=\"list-unstyled page-content-link fw-bolder\" value>\r\n                    {\r\n                        allData.map((item, index) => {\r\n                            if (location === item.location && dept === item.department) {\r\n                                return (\r\n                                    <li className=\"border-bottom py-3\" key={index}>\r\n                                        <div className=\"d-flex justify-content-between flex-wrap\">\r\n                                            <span>\r\n                                                \r\n                                            </span>\r\n                                            <span>\r\n                                                {item.extension === '' ? ' - ' : item.extension} /\r\n                                                <a href={`tel:+886-${item.telephone}`} className=\"ms-2\">{item.telephone}</a>\r\n                                            </span>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            return true\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Directory;","import React from 'react';\r\nimport { HashRouter  as Router, Route, Redirect, NotFoundRoute } from \"react-router-dom\";\r\n// import { BrowserRouter  as Router, Route, Redirect, NotFoundRoute } from \"react-router-dom\";\r\n\r\nimport Login from \"../view/Login\"; //登入\r\nimport Test from \"../view/Test\"; //登入\r\n\r\nconst AppRoute = (props) => {\r\n    return (\r\n        <Router>\r\n            <Route exact path=\"/\"><Login /></Route> {/* 登入 */}\r\n            <Route exact path=\"/qqq\"><Test /></Route> {/* 登入 */}\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRoute","import React, { useState, useEffect } from 'react';\r\nimport AppRoute from './router/AppRoute';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <AppRoute />\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}