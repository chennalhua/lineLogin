{"version":3,"sources":["view/Login.js","view/Test.js","view/Page.js","router/AppRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Login","state","randomBytes","toString","nonce","useEffect","query","url","parse","window","location","href","Object","keys","length","link","process","lineLogin","callbackURL","prototype","hasOwnProperty","call","reqBody","grant_type","code","redirect_uri","client_id","client_secret","axios","post","qs","stringify","headers","then","res","decodedIdToken","jwt","verify","data","id_token","algorithms","audience","issuer","document","cookie","sub","cookieId","replace","setTimeout","err","console","log","catch","error","alert","getAccessToken","Directory","useState","setIsLoading","allData","setAllData","get","ResponseCode","locAry","forEach","item","index","push","filterLocAry","filter","ary","indexOf","setLocation","dept","setDept","depAry","department","getDep","filterDepAry","className","value","onChange","e","target","map","extension","telephone","ConferenceRegistration","lineId","name","id","caseData","setCaseData","setState","caseList","getUrlString","caseId","URL","hash","split","sessionStorage","setItem","localStorage","undefined","style","position","top","left","transform","width","fontSize","getItem","textAlign","AppRoute","props","exact","path","Page","Test","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qkBA0FeA,EAlFD,WACV,IAAMC,EAAQC,IAAY,IAAIC,SAAS,OACjCC,EAAQF,IAAY,IAAIC,SAAS,OAavCE,qBAAU,WACN,IACIC,EADWC,IAAIC,MAAMC,OAAOC,SAASC,MAAM,GAC1BL,MAEiB,IAA9BM,OAAOC,KAAKP,GAAOQ,QAfb,WACd,IAAIC,EAAO,gDACXA,GAAQ,qBACRA,GAAI,qBAAkBC,cACtBD,GAAI,wBAAqBC,2CACzBD,GAAI,iBAAcd,GAClBc,GAAI,iBAAcX,GAClBW,GAAQ,0BACRA,GAAQ,qBACRN,OAAOC,SAASC,KAAOI,EAOfE,MAuDZ,OAHAZ,qBAAU,YA9Ca,SAACa,GACpB,IACIZ,EADWC,IAAIC,MAAMU,GAAa,GACjBZ,MAErB,GADsBM,OAAOO,UAAUC,eAAeC,KAAKf,EAAO,QAC7C,CACjB,IAAMgB,EAAU,CACZC,WAAY,qBACZC,KAAMlB,EAAMkB,KACZC,aAAa,GAAD,OAAKT,2CACjBU,UAAU,GAAD,OAAKV,cACdW,cAAc,GAAD,OAAKX,qCAOtBY,IACKC,KACG,wCACAC,IAAGC,UAAUT,GARH,CACdU,QAAS,CACL,eAAgB,uCASnBC,MAAK,SAACC,GACH,IACI,IAAMC,EAAiBC,IAAIC,OAAOH,EAAII,KAAKC,SAApB,UAAiCvB,oCAAwD,CAC5GwB,WAAY,CAAC,SACbC,SAAU,UAAGzB,cAAmDb,WAChEuC,OAAQ,2BAGZC,SAASC,OAAT,sBAAiCT,EAAeU,IAAhD,KACA,IAAMC,EAAWH,SAASC,OAAOG,QAAQ,iDAAkD,MAC3FC,YAAW,WAAQvC,OAAOC,SAASC,KAAhB,qBAAqCmC,KAAc,KACxE,MAAOG,GAELC,QAAQC,IAAIF,OAGnBG,OAAM,SAACH,GACJC,QAAQC,IAAIF,WAEb3C,EAAM+C,OACbC,MAAM,wFAIVC,CAAe9C,OAAOC,SAASC,QAChC,IAEC,qE,QCyCO6C,EA1HG,WAEd,MAAgCC,oBAAS,GAAzC,mBAAgBC,GAAhB,WAGA,EAA4BD,mBAAS,IAArC,mBAAKE,EAAL,KAAcC,EAAd,KACAvD,qBAAU,WAENuB,IAAMiC,IADI,iBAEL5B,MAAK,SAACC,GACHgB,QAAQC,IAAIjB,EAAII,MACY,MAAzBJ,EAAII,KAAKwB,cACRZ,QAAQC,IAAI,MAGhBS,EAAW1B,EAAII,MACfoB,GAAa,MAEhBN,OAAM,SAACC,GACJH,QAAQC,IAAIE,QAErB,IAGH,IAAIU,EAAS,GAMDJ,EAJHK,SAAQ,SAACC,EAAMC,GAChBH,EAAOI,KAAKF,EAAKvD,aAIzB,IAAI0D,EAAeL,EAAOM,QAAO,SAACJ,EAAMC,EAAOI,GAC3C,OAAOA,EAAIC,QAAQN,KAAUC,KAIjC,EAA8BT,mBAAS,sBAAvC,mBAAK/C,EAAL,KAAe8D,EAAf,KACA,EAAsBf,mBAAS,4BAA/B,mBAAKgB,EAAL,KAAWC,EAAX,KAGIC,EAAS,IACE,SAACrC,GACZA,EAAK0B,SAAQ,SAACC,EAAMC,GACZxD,IAAauD,EAAKvD,UAClBiE,EAAOR,KAAKF,EAAKW,eAI7BC,CAAOlB,GAEP,IAAImB,EAAeH,EAAON,QAAO,SAACJ,EAAMC,EAAOI,GAC3C,OAAOA,EAAIC,QAAQN,KAAUC,KAyBjC,OACI,mCACI,sBAAKa,UAAU,iBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,wBAAQA,UAAU,cAAcC,MAAOtE,EAAUuE,SAvBzC,SAACC,GACrB,IAAMF,EAAUE,EAAEC,OAAZH,MACNR,EAAYQ,GACZrB,EAAQyB,KAAI,SAACnB,GAIT,OAHIe,IAAUf,EAAKvD,UACfgE,EAAQT,EAAKW,aAEV,MAgBC,SAEQR,EAAagB,KAAI,SAACnB,EAAMC,GACpB,OAAO,wBAAmBc,MAAOf,EAA1B,SAAiCA,GAApBA,QAIhC,wBAAQc,UAAU,mBAAmBC,MAAOP,EAAMQ,SAjB1C,SAACC,GACrB,IAAMF,EAAUE,EAAEC,OAAZH,MACNN,EAAQM,IAeI,SAEQF,EAAaM,KAAI,SAACnB,EAAMC,GACpB,OAAO,wBAAmBc,MAAOf,EAA1B,SAAiCA,GAApBA,WAKpC,oBAAIc,UAAU,4CAA4CC,OAAK,EAA/D,SAEQrB,EAAQyB,KAAI,SAACnB,EAAMC,GACf,OAAIxD,IAAauD,EAAKvD,UAAY+D,IAASR,EAAKW,YAExC,oBAAIG,UAAU,qBAAd,SACI,sBAAKA,UAAU,2CAAf,UACI,yBAGA,iCACwB,KAAnBd,EAAKoB,UAAmB,MAAQpB,EAAKoB,UAD1C,KAEI,mBAAG1E,KAAI,mBAAcsD,EAAKqB,WAAaP,UAAU,OAAjD,SAAyDd,EAAKqB,mBAPlCpB,cCtC7DqB,EA7DgB,WAC3B,IAAMC,EAAS7C,SAASC,OAAOG,QAAQ,oDAAqD,MACtFD,EAAWH,SAASC,OAAOG,QAAQ,iDAAkD,MAC3F,EAA8BU,mBAAS,CAAEgC,KAAM,KAAMC,GAAI,OAAzD,mBAAKC,EAAL,KAAeC,EAAf,OACwBnC,mBAAS,MADjC,mBACKxD,EADL,KACY4F,EADZ,KAGIC,EAAW,CACX,CAAEJ,GAAI,MAAOD,KAAM,6BAEvBpF,qBAAU,WAEN,IAAI0F,EAAetF,OAAOC,SAASC,KAE/BqF,EADM,IAAIC,IAAIF,GACDG,KAAKC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAK,GAE7DC,eAAeC,QAAQ,gBAAiBL,GACxCM,aAAaD,QAAQ,cAAeL,GACpCrD,SAASC,OAAT,mBAA8BoD,EAA9B,KAEe,KAAXR,GAA4B,OAAXA,QAA8Be,IAAXf,EAKnB,MAAVQ,GAA4B,QAAVA,GAA8B,IAAVA,QAA0BO,GAAVP,EAI7DF,EAASV,KAAI,SAACnB,EAAMC,GACZpB,GAAYmB,EAAKyB,IACjBE,EAAY,CAAEH,KAAMxB,EAAKwB,KAAMC,GAAIzB,EAAKyB,QALhDG,EAAS,6BALT7C,YAAW,WACPvC,OAAOC,SAASC,KAAO,WACxB,OAYR,IACHN,qBAAU,cAAW,CAACJ,IACtBI,qBAAU,cAAW,IASrB,OACI,mCACI,sBAAKmG,MAAO,CAAEA,MATV,CACRC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,SAIH,UACI,4BAAIpG,OAAOC,SAASC,OACpB,qBAAI6F,MAAO,CAAEM,SAAU,QAAvB,UACI,+CAAahE,KACb,oDAAkBwD,aAAaS,QAAQ,kBACvC,sDAAoBX,eAAeW,QAAQ,uBAE/C,qBAAKP,MAAO,CAAEQ,UAAW,SAAUF,SAAU,QAA7C,SAAwD7G,IACxD,qBAAKuG,MAAO,CAAEQ,UAAW,SAAUF,SAAU,QAA7C,SAAwDnB,EAASF,aCzClEwB,EAVE,SAACC,GACd,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SAAsB,cAAC,EAAD,MAD1B,IAEI,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SAA0B,cAACC,EAAD,MAF9B,IAGI,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,OAAlB,SAAyB,cAACE,EAAD,MAH7B,QCAOC,EAPH,WACV,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzF,MAAK,YAAkD,IAA/C0F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvF,SAASwF,eAAe,SAM1BX,M","file":"static/js/main.f15d9e07.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport randomBytes from \"randombytes\"\r\n\r\nimport axios from 'axios';\r\nimport url from 'url';\r\nimport qs from 'qs';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nconst Login = () => {\r\n    const state = randomBytes(32).toString('hex');\r\n    const nonce = randomBytes(32).toString('hex');\r\n\r\n    const lineLogin = () => {\r\n        let link = 'https://access.line.me/oauth2/v2.1/authorize?';\r\n        link += 'response_type=code';\r\n        link += `&client_id=${process.env.REACT_APP_LINE_LOGIN_CHANNEL_ID_TEST}`;\r\n        link += `&redirect_uri=${process.env.REACT_APP_LINE_LOGIN_CALLBACK_URL_TEST}`;\r\n        link += `&state=${state}`;\r\n        link += `&nonce=${nonce}`;\r\n        link += '&scope=openid%20profile';\r\n        link += '&bot_prompt=normal';\r\n        window.location.href = link;\r\n    };\r\n    useEffect(() => {\r\n        var urlParts = url.parse(window.location.href, true);\r\n        var query = urlParts.query;\r\n        const isLogin = () => {\r\n            if (Object.keys(query).length === 0) {\r\n                lineLogin();\r\n            }\r\n        }\r\n        isLogin()\r\n    });\r\n\r\n    const getAccessToken = (callbackURL) => {\r\n        var urlParts = url.parse(callbackURL, true);\r\n        var query = urlParts.query;\r\n        var hasCodeProperty = Object.prototype.hasOwnProperty.call(query, 'code');\r\n        if (hasCodeProperty) {\r\n            const reqBody = {\r\n                grant_type: 'authorization_code',\r\n                code: query.code,\r\n                redirect_uri: `${process.env.REACT_APP_LINE_LOGIN_CALLBACK_URL_TEST}`,\r\n                client_id: `${process.env.REACT_APP_LINE_LOGIN_CHANNEL_ID_TEST}`,\r\n                client_secret: `${process.env.REACT_APP_LINE_LOGIN_CHANNEL_SECRET_TEST}`\r\n            };\r\n            const reqConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            };\r\n            axios\r\n                .post(\r\n                    'https://api.line.me/oauth2/v2.1/token',\r\n                    qs.stringify(reqBody),\r\n                    reqConfig\r\n                )\r\n                .then((res) => {\r\n                    try {\r\n                        const decodedIdToken = jwt.verify(res.data.id_token, `${process.env.REACT_APP_LINE_LOGIN_CHANNEL_SECRET_TEST}`, {\r\n                            algorithms: ['HS256'],\r\n                            audience: `${process.env.REACT_APP_LINE_LOGIN_CHANNEL_ID_TEST}`.toString(),\r\n                            issuer: 'https://access.line.me',\r\n                            // nonce: `${newId}`\r\n                        });\r\n                        document.cookie = `lineIdToken=${decodedIdToken.sub};`;\r\n                        const cookieId = document.cookie.replace(/(?:(?:^|.*;\\s*)cookieId\\s*=\\s*([^;]*).*$)|^.*$/, '$1');\r\n                        setTimeout(() => { window.location.href = `/#/page?id=${cookieId}` }, 1000);\r\n                    } catch (err) {\r\n                        // If token is invalid.\r\n                        console.log(err);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else if (query.error) {\r\n            alert('需「許可」授權，才能驗證登入')\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccessToken(window.location.href)\r\n    }, []);\r\n    return (\r\n        <div>\r\n            頁面導回中...\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Directory = () => {\r\n    //component\r\n    let [isLoading, setIsLoading] = useState(true);\r\n\r\n    //篩選地區\r\n    let [allData, setAllData] = useState([])\r\n    useEffect(() => {\r\n        let locAPI = `/api/Gcd/loc=`;\r\n        axios.get(locAPI)\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                if(res.data.ResponseCode == '-1'){\r\n                    console.log('-1')\r\n                    // window.location.href = '/'\r\n                }\r\n                setAllData(res.data)\r\n                setIsLoading(false)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, []);\r\n\r\n\r\n    let locAry = []; //放置所有從 API DATA 取出的 location\r\n    const getLocation = (data) => {\r\n        data.forEach((item, index) => {\r\n            locAry.push(item.location)\r\n        })\r\n    }\r\n    getLocation(allData)\r\n    let filterLocAry = locAry.filter((item, index, ary) => {\r\n        return ary.indexOf(item) === index\r\n    }) //篩選過濾出重複後的陣列\r\n    //篩選地區 end\r\n\r\n    let [location, setLocation] = useState('總公司'); //地區\r\n    let [dept, setDept] = useState('董事長室'); //部門\r\n\r\n    //篩選部門\r\n    let depAry = [];\r\n    const getDep = (data) => {\r\n        data.forEach((item, index) => {\r\n            if (location === item.location) {\r\n                depAry.push(item.department)\r\n            }\r\n        })\r\n    }\r\n    getDep(allData);\r\n\r\n    let filterDepAry = depAry.filter((item, index, ary) => {\r\n        return ary.indexOf(item) === index\r\n    }) //篩選過濾出重複後的陣列\r\n\r\n    //篩選部門 end\r\n\r\n    //change location\r\n    const handleLocChange = (e) => {\r\n        let { value } = e.target\r\n        setLocation(value);\r\n        allData.map((item) => {\r\n            if (value === item.location) {\r\n                setDept(item.department)\r\n            }\r\n            return true\r\n        })\r\n    }\r\n    //change location end\r\n\r\n    //change department\r\n    const handleDepChange = (e) => {\r\n        let { value } = e.target\r\n        setDept(value);\r\n    }\r\n    //change department end\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mt-3\">\r\n                <div className=\"d-flex pb-2\">\r\n                    <select className=\"form-select\" value={location} onChange={handleLocChange}>\r\n                        {\r\n                            filterLocAry.map((item, index) => {\r\n                                return <option key={item} value={item}>{item}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                    <select className=\"form-select ms-2\" value={dept} onChange={handleDepChange}>\r\n                        {\r\n                            filterDepAry.map((item, index) => {\r\n                                return <option key={item} value={item}>{item}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <ul className=\"list-unstyled page-content-link fw-bolder\" value>\r\n                    {\r\n                        allData.map((item, index) => {\r\n                            if (location === item.location && dept === item.department) {\r\n                                return (\r\n                                    <li className=\"border-bottom py-3\" key={index}>\r\n                                        <div className=\"d-flex justify-content-between flex-wrap\">\r\n                                            <span>\r\n                                                \r\n                                            </span>\r\n                                            <span>\r\n                                                {item.extension === '' ? ' - ' : item.extension} /\r\n                                                <a href={`tel:+886-${item.telephone}`} className=\"ms-2\">{item.telephone}</a>\r\n                                            </span>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            return true\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Directory;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Loading from './Loading';\r\n\r\nconst ConferenceRegistration = () => {\r\n    const lineId = document.cookie.replace(/(?:(?:^|.*;\\s*)lineIdToken\\s*=\\s*([^;]*).*$)|^.*$/, '$1');\r\n    const cookieId = document.cookie.replace(/(?:(?:^|.*;\\s*)cookieId\\s*=\\s*([^;]*).*$)|^.*$/, '$1');\r\n    let [caseData, setCaseData] = useState({ name: null, id: null }),\r\n        [state, setState] = useState(null) //狀態(接 API Response data)\r\n\r\n    let caseList = [\r\n        { id: '001', name: '新年快樂' }\r\n    ]\r\n    useEffect(() => {\r\n        //抓課程 id\r\n        var getUrlString = window.location.href;\r\n        var url = new URL(getUrlString);\r\n        let caseId = url.hash.split('#')[1].split('?')[1].split('=')[1]\r\n\r\n        sessionStorage.setItem('sessionCaseId', caseId)\r\n        localStorage.setItem('localCaseId', caseId)\r\n        document.cookie = `cookieId=${caseId};`;\r\n        //抓 line id\r\n        if (lineId === '' || lineId === null || lineId === undefined) {\r\n            setTimeout(() => {\r\n                window.location.href = '/login'\r\n            }, 3000)\r\n            return\r\n        } else if (caseId == null || caseId == 'null' || caseId == '' || caseId == undefined) {\r\n            setState('抓 ID 錯誤 !!')\r\n            return\r\n        } else {\r\n            caseList.map((item, index) => {\r\n                if (cookieId == item.id) {\r\n                    setCaseData({ name: item.name, id: item.id })\r\n                }\r\n            })\r\n        }\r\n    }, [])\r\n    useEffect(() => { }, [state])\r\n    useEffect(() => { }, [])\r\n\r\n    let style = {\r\n        position: 'absolute',\r\n        top: '35%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '100%'\r\n    }\r\n    return (\r\n        <>\r\n            <div style={{ style }}>\r\n                <p>{window.location.href}</p>\r\n                <ul style={{ fontSize: '18px' }}>\r\n                    <li>cookies：{cookieId}</li>\r\n                    <li>localStorage：{localStorage.getItem('localCaseId')}</li>\r\n                    <li>sessionStorage：{sessionStorage.getItem('sessionCaseId')}</li>\r\n                </ul>\r\n                <div style={{ textAlign: 'center', fontSize: '20px' }}>{state}</div>\r\n                <div style={{ textAlign: 'center', fontSize: '20px' }}>{caseData.name}</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ConferenceRegistration","import React from 'react';\r\nimport { HashRouter  as Router, Route, Redirect, NotFoundRoute } from \"react-router-dom\";\r\n// import { BrowserRouter  as Router, Route, Redirect, NotFoundRoute } from \"react-router-dom\";\r\n\r\nimport Login from \"../view/Login\"; //登入\r\nimport Test from \"../view/Test\"; //登入\r\nimport Page from \"../view/Page\"\r\n\r\nconst AppRoute = (props) => {\r\n    return (\r\n        <Router>\r\n            <Route exact path=\"/\"><Login /></Route> {/* 登入 */}\r\n            <Route exact path=\"/page\"><Page /></Route> {/* 登入 */}\r\n            <Route exact path=\"/qqq\"><Test /></Route> {/* 登入 */}\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRoute","import React, { useState, useEffect } from 'react';\r\nimport AppRoute from './router/AppRoute';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <AppRoute />\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}